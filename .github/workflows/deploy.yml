name: Deploy to VM

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Upload code to VM
        env:
          SSH_PRIVATE_KEY: ${{ secrets.VM_SSH_PRIVATE_KEY }}
        run: |
          # Save SSH key to a temporary file
          echo "$SSH_PRIVATE_KEY" > /tmp/id_rsa
          chmod 600 /tmp/id_rsa

          # Upload the application code to the VM
          scp -o StrictHostKeyChecking=no -i /tmp/id_rsa -r ./* ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }}:/var/www/html/backend-catalog

      - name: Execute build and deploy script on VM
        env:
          SSH_PRIVATE_KEY: ${{ secrets.VM_SSH_PRIVATE_KEY }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
        run: |
          # Run build and deploy script on VM
          ssh -o StrictHostKeyChecking=no -i /tmp/id_rsa ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} <<EOF
            cd /var/www/html/backend-catalog

            git pull origin master

            npm install

            npm run build

            sudo docker-compose down
            sudo docker-compose up --build -d
          EOF